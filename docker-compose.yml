version: "2.1"
services:
  cio:
    image: cio
    container_name: cio
    build: . # apunta a ./Dockerfile
    tty: true #salida colorizada mediante el uso de pseudo tty
    #permite conectarse tambien desde el host y verse con los demas en el mismo modo
    network_mode: "host"
    volumes:
      - ./images:/sails/images
      - ./.tmp:/sails/www
    env_file: #cargar variables de entorno
      - .env
    environment: #overwrites a .env!
      #dominio del cual se estar치 visualizando la pagina, necesario para plantillas
      - BASE_URL=http://localhost

      #contrase침a inicial para las cuentas que se creen desde helpers.ensure-users
      - PASSWORD_INICIAL=password
      #dominio a usar para las cuentas por default: super, admin, capturista, director
      - ACCOUNTS_DOMAIN=dominio.com

      #secretos
      - SESSION_SECRET=71d59d41-64b9-4817-929a-25e6f5b6f79f
      - MOVIL_API_KEY=5dce6a5f-2eed-45a7-b3f9-7a49da3da1f8
      - JWT_SECRET=c0025e2a-b4ae-443f-9486-640d96f77584
      - JWT_EXPIRATION=8h

      - ALLOWED_DOMAINS=http://localhost,http://localhost:1337

      #usar google analytics
      #GOOGLE_ANALYTICS_ID=G-X000000000

      #user-agent permitido en la policy para los controllers en movil
      - MOVIL_USER_AGENT=App-1.0.0

      #puerto para iniciar
      - APP_PORT=1337

      #crear usuarios iniciales del sistema con el dominio y password por default
      - CREATE_USERS=true

      #importar datos de demostracion
      - CREATE_DEMO_DATA=true

      #host de la base de datos donde reside la informaci칩n de la etapa 1
      - MSSQL_DB=cio
      #MSSQL_PORT=1433
      #MSSQL_HOST=localhost
      #MSSQL_USER=sa
      - MSSQL_PASSWORD=Sapassword1!

      - LOG_LEVEL=verbose
      - NODE_ENV=development

      #host para redis, al usarlo, la aplicaci칩n se convierte en estateles.
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_AUTH=thisisthefugginpassword
    ports:
      - "127.0.0.1:1337:1337"
    depends_on:
      - "mssql"

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "127.0.0.1:80:80"
    tty: true
    depends_on:
      - "redis"
    volumes:
      - ${PWD}/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${PWD}/www:/www

  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: mssql
    ports:
      - "127.0.0.1:1433:1433"
    volumes:
      - ${PWD}/mssql:/var/opt/mssql
    depends_on:
      - "redis"
      - "nginx"
    env_file:
      - .env
    entrypoint: sh
    command: -c '/opt/mssql/bin/sqlservr && /opt/mssql-tools/bin/sqlcmd -U ${MSSQL_USER} -P ${MSSQL_PASSWORD} -d master -q "IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = '${MSSQL_DB}') CREATE DATABASE ${MSSQL_DB};SELECT name FROM sys.databases WHERE name = '${MSSQL_DB}';"'
    environment:
      - MSSQL_PID=Express
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_PASSWORD}

  redis:
    image: redis:4-alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_AUTH} --appendonly yes
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - ${PWD}/redis:/data
