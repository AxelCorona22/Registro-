#establecimiento de zona "login", 10 megas de almacenamiento (16,000) direcciones ip, con un limite de 10 solicitudes por minuto
limit_req_zone $binary_remote_addr zone=login:1m rate=15r/m;

#limites para el resto del back, 30 solicitudes por minutos, una cada dos segundos.
limit_req_zone $binary_remote_addr zone=back:1m rate=120r/m;

#balanceo de carga en caso de tener varios puntos en ips o puertos separados
#como cuando se inicia en contenedores, vps, etc.
upstream servers_reto {
  #este ip debe apuntar hacia el ip (o cluster de ips/puertos) en donde se ejecuta la aplicación.
  #si vas a usar el proxy nginx asegurate que apunte a la direccion de red correcta
  server 192.168.0.10:1337;
  #server 192.168.0.10:1338;
  #server 192.168.0.11:1337;
  #etc..
}

server {
    #server_name _;
    listen 80 default_server;
    listen [::]:80 default_server;
    client_max_body_size 8M;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    #lugar donde ha quedado la generación de assets
    # ya sea con el comando: sails www --prod
    # o con sails lift (.tmp)
    root /www;

    #todas las rutas, primero intentar la url en root, y si no, mapear a el proxy
    location / {
      try_files $uri @servers_reto;
    }

    #protegiendo el login de ataques de fuerza bruta.
    location /api/v1/entrance/login {
      limit_req zone=login burst=10 delay=5;
      limit_req_log_level warn;
      try_files $uri @servers_reto;
    }

    #protegiendo el login para movil de ataques de fuerza bruta.
    location /api/v1/movil/login {
      limit_req zone=login burst=10 delay=5;
      limit_req_log_level warn;
      try_files $uri @servers_reto;
    }

    #negar todo el codigo fuente (no deberia estar ahi de todas formas)
    #location /js/ {
    #  deny all;
    #  return 404;
    #}

    #proxy a la aplicación con soporte para websockets
    location @servers_reto {
      #limit_req zone=back burst=120 delay=120; #permitir hasta 30 solicitudes en racimo y a partir de la 30 darles un delay.
      #limit_req_log_level warn; #mandar los logs de limits como warn

      proxy_pass http://servers_reto; #pasar la solicitud a alguno de los servidores definidos
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }

    error_page 502 /502.html;
    error_page 500 /500.html;

}
